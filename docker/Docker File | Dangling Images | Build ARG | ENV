 Dangling Image | 
how to pss build parameter during the time of building images |
how to pass env variable in running container|
dockerfile|
--------------------------------------------------------------------------------------------------------------------------------------------
in prod defult image are not used - we take it and modify it
--------------------------------------------------------------------------------------------------------------------------------------------

Docker File part 01
This repository contains a Dockerfile for setting up an environment with Terraform and Packer on an Ubuntu base image.
Below are the steps and commands used in the Dockerfile and for running the container.

Dockerfile Overview
The Dockerfile performs the following tasks:

Sets up an Ubuntu base image.
Installs necessary tools (jq, net-tools, curl, wget, unzip, nginx, iputils-ping).
Downloads and installs specific versions of Terraform and Packer.
Runs nginx in the foreground.
Dockerfile Contents
FROM ubuntu:latest

LABEL name="saikiran"

ENV AWS_ACCESS_KEY_ID=SDFSDFSDFSDFSDFSDFSDFSDF
AWS_SECRET_KEY_ID=SDSDSDSDSDSDSDSDSDSDSDSD
AWS_DEFAULT_REGION=US-EAST-1A

ARG T_VERSION='1.6.6'
P_VERSION='1.8.0'

RUN apt update && apt install -y jq net-tools curl wget unzip
&& apt install -y nginx iputils-ping

RUN wget https://releases.hashicorp.com/terraform/${T_VERSION}/terraform_${T_VERSION}_linux_amd64.zip
&& wget https://releases.hashicorp.com/packer/${P_VERSION}/packer_${P_VERSION}_linux_amd64.zip
&& unzip terraform_${T_VERSION}linux_amd64.zip && unzip packer${P_VERSION}_linux_amd64.zip
&& chmod 777 terraform && chmod 777 packer
&& ./terraform version && ./packer version

CMD ["nginx", "-g", "daemon off;"]

Docker Commands
Building the Docker Image
To build the Docker image with a specific name and tag:
docker build -t your_image_name:v3 .

To build the Docker image without using the cache:

docker build --no-cache -t your_image_name:v3 .
login to container and check it that is called smoke test  -----imp
---------------------------------------------------------------------------

arg can pass running build not running container   ----------------------------------------------imp
env pass when running conatiner not running build 
-------------------------------------------------------------------------------------------------------------


to overite version

docker build -t kiran2361993/custom:vl \
  --build-arg T_VERSION='1.5.0' \
  --build-arg P_VERSION='1.4.0' \
  -f dockerfile.dev . --no-cache

ya command mde all content dist nahit

docker build -t kiran2361993/custom:v2 \
  --progress=plain                        ---------------------imp
  --build-arg T_VERSION='1.5.0' \
  --build-arg P_VERSION='1.4.0' \
  -f dockerfile.dev . --no-cache


--------------------------------------------------------------------------------------------------------

docker run --rm  -d --name app1 -p 8000:80 kiran2361993/custom:vl
docker exec -it app1 bash
login container and check version change or not
------------------------------------------------------------------------------------------------------
to see credential
docker exec -it app1 env  

to hide credential
docker run -d --name app2 -p 8001:80 -e AWS_ACCESS_KEY_ID=hidden -e AWS_SECRET_ACCESS_KEY=hidden -e AWS_DEFAULT_REGION=hidden kiran2361993/custom:v2

--------------------------------------------------------------------------------------------------------------------------------------------------------
how to crete dangling image 
first build v1 - on top of it again added tag then old iamge will gone it will be overwritten with new image   --------imp
docker system prune y
---------------------------------------------------------------------------------------------------------------------------------------------------------




To pass build arguments for Terraform and Packer versions:

docker build --build-arg T_VERSION=1.4.0 --build-arg P_VERSION=1.5.0 -t your_image_name:v3 .

To build the Docker image with plain progress output:

docker build --progress=plain -t your_image_name:v3 .
