. What is KMS and why do we use it?
‚ÄúKMS is used for managing encryption keys in AWS. We use it to secure data at rest and
in transit with controlled access and auditing.‚Äù
---------------------------------------------------------
AWS-managed CMKs ‚Üí default, fully AWS-managed.

Customer-managed CMKs ‚Üí created/controlled by us, supports rotation, key policies, cross-account.

Data keys ‚Üí temporary keys generated by CMK to encrypt large data (used in envelope encryption).
-----------------------------------------------------------------------------------------------------
3. Can KMS encrypt large files directly?

No. KMS is not designed to encrypt large files directly.

Instead, it uses Envelope Encryption:

KMS generates a data key.

The data key encrypts the large file (outside KMS).

The data key itself is encrypted with the CMK and stored alongside the file.

Later, KMS decrypts the data key, which is then used to decrypt the file.

üëâ Short answer for interview:
‚ÄúNo, KMS doesn‚Äôt encrypt large files directly. It uses envelope encryption ‚Äî 
MS only encrypts the small data key, and that key is used to encrypt/decrypt the actual large data.‚Äù
-------------------------------------------------------------------------------------------------------------
How do you encrypt S3 with KMS?
‚ÄúWe enable SSE-KMS on the S3 bucket and link it to a KMS key (AWS-managed or customer-managed). 
All objects will then be encrypted automatically with KMS.‚Äù
------------------------------------------------------------------
. How do you handle cross-account KMS key sharing?
‚ÄúTo share a KMS key across AWS accounts, we update the KMS key policy to allow
IAM users or roles from the other account. This gives them permission to use the 
key (for example, kms:Encrypt, kms:Decrypt). For temporary or fine-grained access, we can also use KMS grants.
Once the policy or grant is in place, resources in the other account can use the KMS key securely.‚Äù
=----------------------------------------------------------------------------------------------------
. Can you enable KMS encryption on already running RDS/EBS?
No, you can‚Äôt enable KMS encryption on an existing RDS or EBS directly. You must take a snapshot, 
copy it with encryption, and then restore a new encrypted resource.‚Äù







2 tpe kms 
master key and data key

Master Key ‚Äî One line definition would be that It is used to encrypt data. However, the
maximum size of data that can be encrypted using the master key is 4KB.
The master Key itself is classified into two types
1 -Customer Master Key(CMK)
2-Data Key

---------------------------
Customer Master Key(CMK): Customer Master Key is a schematic representation of the master
key. The schema contains
Key ID
Creation Date
Description
Key State
Key Material
------------------------------------------
Though KMS doesn't perform Asymmetric Encryption, it allows us to create Symmetric and
Asymmetric Customer Master Keys.
There is a limit of 10,000 CMKs per account per region by default. But you can always
request to limit an increase for the CMKs.
----------------------------------------------

Data Key
Since the master key by default cannot be used to encrypt data beyond 4KB, CMKs are used tc
generate data keys, which are in turn used to encrypt data outside KMS. The data key is used
encrypt and decrypt large volumes of data in other AWS Services such as S3, EC2, EBS, etc
Though KMS provide high availability as keys are stored in multiple availability zones within
a region, Customer Master Keys are unique to the AWS Account and your region.
----------------------------------------------------------------

