Connecting EC2 in Account A to RDS in Account B Using AWS PrivateLink
AWS PrivateLink allows secure, private communication between EC2 (Account A) and RDS (Account B) without exposing the database to the public internet. This is done using VPC Endpoints.

Steps to Connect EC2 to RDS Using AWS PrivateLink
1. Enable AWS PrivateLink in Account B (RDS Account)
In Account B (where RDS is hosted):

Create a VPC Endpoint for RDS:

Go to AWS Console → VPC → Endpoints → Create Endpoint.
Select AWS Service and search for the RDS endpoint service (for example, com.amazonaws.<region>.rds).
Choose the VPC where RDS is deployed.
Select the subnet(s) and security group that allow incoming traffic from Account A.
Click Create.
Get the Private DNS Name / Endpoint Name:

After creation, copy the VPC Endpoint DNS name (e.g., vpce-xxxx.rds.<region>.amazonaws.com).
2. Allow Access from Account A (EC2 Account)
In Account A (where EC2 is hosted):

Create a VPC Peering Connection or Allow Access:

If both VPCs are in different accounts but in the same region, use AWS PrivateLink directly.
If VPCs are in different regions, you may need VPC Peering.
Modify Route Table:

In Account A, go to VPC → Route Tables.
Add a route for the RDS VPC Endpoint (Account B) to route through PrivateLink.
Update EC2 Security Group:

Ensure EC2’s security group allows outbound traffic to the RDS VPC Endpoint.
3. Modify RDS Security Group in Account B
In Account B, update the RDS security group to allow inbound traffic from the PrivateLink VPC Endpoint.
4. Connect to RDS from EC2 (Account A)
Once PrivateLink is set up:

Use the VPC Endpoint DNS Name (vpce-xxxx.rds.<region>.amazonaws.com) to connect:

For MySQL:

bash
Copy
Edit
mysql -h vpce-xxxx.rds.<region>.amazonaws.com -u myuser -p
For PostgreSQL:

bash
Copy
Edit
psql -h vpce-xxxx.rds.<region>.amazonaws.com -U myuser -d mydatabase
Advantages of Using AWS PrivateLink
✔ Private and Secure – No exposure to the internet.
✔ No Need for VPC Peering – Works even across accounts.
✔ Lower Latency – Direct connection within AWS backbone network.
