 prod тЭМ dev тЭМ qa
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-all-prod
  namespace: prod
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---------------------------------------------
 prod: pod1 <--> pod2 тЬЕ
 dev: pod1 <--> pod2 тЬЕ
 qa : pod1 <--> pod2 тЬЕ

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-within-prod
  namespace: prod
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: prod
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: prod
----------------------------------------------------------------------------------------------
Allow dev тЖТ prod (Only One Direction)

 dev pod ---> prod pod тЬЕ


apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-ingress-from-dev
  namespace: prod
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          nsp: dev
----------------------------------
 prod pod -x-> dev pod тЭМ

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-egress-to-prod
  namespace: dev
spec:
  podSelector: {}
  policyTypes:
  - Egress
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          nsp: prod
------------------------------------------
































### **ЁЯФе Kubernetes NetworkPolicy - рд╕рд░реНрд╡ рд╕рдВрднрд╛рд╡реНрдп рдкрд░рд┐рд╕реНрдерд┐рддреА (Scenarios) ЁЯФе**  
рдХрдореА рдЧреЛрдВрдзрд│ рд╣реЛрдгреНрдпрд╛рд╕рд╛рдареА, рдореА рд╡рд┐рд╡рд┐рдз **Namespace (ns) рдЖрдгрд┐ Pod (рдкреЙрдб) рдкрд░реНрдпрд╛рдп** рд╕реНрдкрд╖реНрдЯ рдХрд░рддреЛ.  

---

## **1я╕ПтГг рдПрдХрд╛ Namespace рдордзреАрд▓ рдкреЙрдбреНрд╕рдирд╛ рдПрдХрдореЗрдХрд╛рдВрд╢реА рдмреЛрд▓реВ рджреНрдпрд╛ (Allow All in Same Namespace)**
тЬЕ **Scenario:**  
- `prod` namespace рдордзреАрд▓ **рд╕рд░реНрд╡ рдкреЙрдбреНрд╕рдирд╛** рдПрдХрдореЗрдХрд╛рдВрд╢реА рдмреЛрд▓реВ рджреНрдпрд╛.  
- рдмрд╛рд╣реЗрд░рдЪреНрдпрд╛ namespace рдордзреАрд▓ **рдХреЛрдгреАрд╣реА рдпрд╛рдд рдЯреНрд░реЕрдлрд┐рдХ рдкрд╛рдард╡реВ рд╢рдХрдгрд╛рд░ рдирд╛рд╣реА**.  

**тЬЕ YAML:**  
```yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-traffic-within-prod
  namespace: prod
spec:
  podSelector: {}  # 'prod' рдордзреАрд▓ рд╕рд░реНрд╡ рдкреЙрдбреНрд╕рд╕рд╛рдареА рд▓рд╛рдЧреВ
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: prod  # рдлрдХреНрдд 'prod' рдордзреВрди рдЯреНрд░реЕрдлрд┐рдХ рдпреЗрдК рд╢рдХрддреЛ
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: prod  # рдлрдХреНрдд 'prod' рдордзреНрдпреЗрдЪ рдЯреНрд░реЕрдлрд┐рдХ рдЬрд╛рдК рд╢рдХрддреЛ
```
тЬФ **`prod` рдордзреАрд▓ рдкреЙрдбреНрд╕ рдлрдХреНрдд `prod` рдордзреАрд▓рдЪ рдмреЛрд▓реВ рд╢рдХрддреАрд▓.**  
тЬФ **`dev` рдХрд┐рдВрд╡рд╛ `test` namespace рдордзреАрд▓ рдХреЛрдгреАрд╣реА `prod` рдордзреНрдпреЗ рдпреЗрдК рд╢рдХрдгрд╛рд░ рдирд╛рд╣реА.**  

---

## **2я╕ПтГг рдПрдХрд╛ Namespace рдордзреАрд▓ рдлрдХреНрдд рдард░рд╛рд╡рд┐рдХ Pod рд▓рд╛ рдмрд╛рд╣реЗрд░реВрди Allow рдХрд░рд╛**
тЬЕ **Scenario:**  
- `prod` рдордзреНрдпреЗ **рдлрдХреНрдд `app=frontend` рдЕрд╕рд▓реЗрд▓реНрдпрд╛ рдкреЙрдбреНрд╕рдирд╛ рдЯреНрд░реЕрдлрд┐рдХ Allow** рдХрд░рд╛рдпрдЪрд╛ рдЖрд╣реЗ.  
- рдмрд╛рдХреА рдХреЛрдгрддреНрдпрд╛рд╣реА рдкреЙрдбрд▓рд╛ рдЯреНрд░реЕрдлрд┐рдХ рдпреЗрдК рд╢рдХрдгрд╛рд░ рдирд╛рд╣реА.  

**тЬЕ YAML:**  
```yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-specific-pod
  namespace: prod
spec:
  podSelector:
    matchLabels:
      app: frontend  # рдлрдХреНрдд 'frontend' рдкреЙрдбрд╕рд╛рдареА рд▓рд╛рдЧреВ
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: prod  # рдлрдХреНрдд 'prod' рдордзреВрдирдЪ рдЯреНрд░реЕрдлрд┐рдХ рдпреЗрдК рд╢рдХрддреЛ
```
тЬФ **рдлрдХреНрдд `app=frontend` рдЕрд╕рд▓реЗрд▓реНрдпрд╛ рдкреЙрдбреНрд╕рдирд╛ рдмрд╛рд╣реЗрд░реВрди рдЯреНрд░реЕрдлрд┐рдХ рдорд┐рд│реЗрд▓.**  
тЬФ **рдмрд╛рдХреА рдХреЛрдгрддреНрдпрд╛рд╣реА рдкреЙрдбрд▓рд╛ рдмрд╛рд╣реЗрд░реВрди рдЯреНрд░реЕрдлрд┐рдХ рдорд┐рд│рдгрд╛рд░ рдирд╛рд╣реА.**  

---

## **3я╕ПтГг рдПрдХрд╛ Namespace рдордзреВрди рджреБрд╕рд▒реНрдпрд╛ Namespace рд▓рд╛ Allow рдХрд░рд╛ (Egress)**
тЬЕ **Scenario:**  
- `prod` рдордзреАрд▓ рдкреЙрдбреНрд╕рдирд╛ `dev` рдордзреНрдпреЗ рдЯреНрд░реЕрдлрд┐рдХ рдкрд╛рдард╡реВ рджреНрдпрд╛.  
- `dev` рдордзреАрд▓ рдкреЙрдбреНрд╕ рдорд╛рддреНрд░ `prod` рдордзреНрдпреЗ рдЯреНрд░реЕрдлрд┐рдХ рдкрд╛рдард╡реВ рд╢рдХрдгрд╛рд░ рдирд╛рд╣реАрдд.  

**тЬЕ YAML:**  
```yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-prod-to-dev
  namespace: prod
spec:
  podSelector: {}  # 'prod' рдордзреАрд▓ рд╕рд░реНрд╡ рдкреЙрдбреНрд╕рд╕рд╛рдареА рд▓рд╛рдЧреВ
  policyTypes:
  - Egress
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: dev  # 'prod' рдордзреВрди 'dev' рд▓рд╛ рдЯреНрд░реЕрдлрд┐рдХ рдЬрд╛рдК рд╢рдХрддреЛ
```
тЬФ **`prod` рдордзреВрди `dev` рдордзреНрдпреЗ рдЯреНрд░реЕрдлрд┐рдХ рдЬрд╛рдК рд╢рдХрддреЛ.**  
тЭМ **`dev` рдордзреВрди `prod` рдордзреНрдпреЗ рдЯреНрд░реЕрдлрд┐рдХ рдпреЗрдК рд╢рдХрдгрд╛рд░ рдирд╛рд╣реА.**  

---

## **4я╕ПтГг рджреЛрди Namespace рдордзреАрд▓ рдард░рд╛рд╡рд┐рдХ Pod-Pod рдордзреНрдпреЗрдЪ рд╕рдВрдкреНрд░реЗрд╖рдг Allow рдХрд░рд╛**
тЬЕ **Scenario:**  
- `prod` рдордзреАрд▓ `app=frontend` рд╣рд╛ рдкреЙрдб `dev` рдордзреАрд▓ `app=backend` рд╢реА рдмреЛрд▓реВ рд╢рдХрддреЛ.  
- рдмрд╛рдХреА рдХреЛрдгрддрд╛рд╣реА рдЯреНрд░реЕрдлрд┐рдХ Allow рдирд╛рд╣реА.  

**тЬЕ YAML:**  
```yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-specific-pod-to-pod
  namespace: prod
spec:
  podSelector:
    matchLabels:
      app: frontend  # рдлрдХреНрдд 'frontend' рдкреЙрдбрд╕рд╛рдареА рд▓рд╛рдЧреВ
  policyTypes:
  - Egress
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: backend  # рдлрдХреНрдд 'backend' рдкреЙрдбрд▓рд╛ рдЯреНрд░реЕрдлрд┐рдХ рдЬрд╛рдК рд╢рдХрддреЛ
      namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: dev  # 'dev' рдордзреНрдпреЗрдЪ рдкрд░рд╡рд╛рдирдЧреА рдЖрд╣реЗ
```
тЬФ **`prod` рдордзреАрд▓ `frontend` рдлрдХреНрдд `dev` рдордзреАрд▓ `backend` рд╢реА рдмреЛрд▓реВ рд╢рдХрддреЛ.**  
тЬФ **рдмрд╛рдХреА рдХреЛрдгрддреНрдпрд╛рд╣реА рдкреЙрдбрд▓рд╛ рд╕рдВрдкреНрд░реЗрд╖рдг рдХрд░рддрд╛ рдпреЗрдгрд╛рд░ рдирд╛рд╣реА.**  

---

## **5я╕ПтГг рд╕рд░реНрд╡ Incoming Traffic Block рдХрд░рд╛ (Deny All Ingress)**
тЬЕ **Scenario:**  
- **рдХреЛрдгрддреНрдпрд╛рд╣реА рдкреЙрдбрд▓рд╛ рдмрд╛рд╣реЗрд░реВрди рдЯреНрд░реЕрдлрд┐рдХ рдпреЗрдК рджреЗрдК рдирдХрд╛.**  
- рдлрдХреНрдд рдкреЙрдбреНрд╕ outgoing traffic рдкрд╛рдард╡реВ рд╢рдХрддреАрд▓.  

**тЬЕ YAML:**  
```yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-all-ingress
  namespace: prod
spec:
  podSelector: {}  # 'prod' рдордзреАрд▓ рд╕рд░реНрд╡ рдкреЙрдбреНрд╕рд╕рд╛рдареА рд▓рд╛рдЧреВ
  policyTypes:
  - Ingress
  ingress: []
```
тЬФ **рд╕рд░реНрд╡ incoming traffic Block рд╣реЛрдИрд▓.**  
тЬФ **Egress (outgoing traffic) unrestricted рд░рд╛рд╣реАрд▓.**  

---

## **6я╕ПтГг рд╕рд░реНрд╡ Outgoing Traffic Block рдХрд░рд╛ (Deny All Egress)**
тЬЕ **Scenario:**  
- рдкреЙрдбреНрд╕ **рдХреЛрдареЗрд╣реА рдЯреНрд░реЕрдлрд┐рдХ рдкрд╛рдард╡реВ рд╢рдХрдгрд╛рд░ рдирд╛рд╣реАрдд.**  
- рдмрд╛рд╣реЗрд░реВрди рдпреЗрдгрд╛рд░рд╛ (Ingress) рдЯреНрд░реЕрдлрд┐рдХ рдирд┐рдпрдВрддреНрд░рд┐рдд рдирд╛рд╣реА.  

**тЬЕ YAML:**  
```yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-all-egress
  namespace: prod
spec:
  podSelector: {}  # 'prod' рдордзреАрд▓ рд╕рд░реНрд╡ рдкреЙрдбреНрд╕рд╕рд╛рдареА рд▓рд╛рдЧреВ
  policyTypes:
  - Egress
  egress: []
```
тЬФ **рд╕рд░реНрд╡ outgoing traffic Block рд╣реЛрдИрд▓.**  
тЬФ **Ingress (incoming traffic) unrestricted рд░рд╛рд╣реАрд▓.**  

---

### **ЁЯФе рдХреЛрдгрддреА Policy рддреБрдореНрд╣рд╛рд▓рд╛ рд╣рд╡реА рдЖрд╣реЗ?**  
тЬФ **рдлрдХреНрдд `prod` рдордзреНрдпреЗ рдЯреНрд░реЕрдлрд┐рдХ Allow рдХрд░рд╛рдпрдЪрд╛ рдЕрд╕реЗрд▓ рддрд░ -** Scenario 1  
тЬФ **рдлрдХреНрдд `frontend` рдкреЙрдбрд▓рд╛ Allow рдХрд░рд╛рдпрдЪреЗ рдЕрд╕реЗрд▓ рддрд░ -** Scenario 2  
тЬФ **`prod` рдордзреВрди `dev` рдордзреНрдпреЗ outgoing traffic Allow рдХрд░рд╛рдпрдЪрд╛ рдЕрд╕реЗрд▓ рддрд░ -** Scenario 3  
тЬФ **`prod` рдордзреАрд▓ `frontend` рдлрдХреНрдд `dev` рдордзреАрд▓ `backend` рд╢реА рдмреЛрд▓реВ рд╢рдХрддреЛ -** Scenario 4  
тЬФ **рд╕рд░реНрд╡ Incoming traffic рдмрдВрдж рдХрд░рд╛рдпрдЪрд╛ рдЕрд╕реЗрд▓ рддрд░ -** Scenario 5  
тЬФ **рд╕рд░реНрд╡ Outgoing traffic рдмрдВрдж рдХрд░рд╛рдпрдЪрд╛ рдЕрд╕реЗрд▓ рддрд░ -** Scenario 6  

рддреБрдореНрд╣рд╛рд▓рд╛ рдирдХреНрдХреА рдХреЛрдгрддрд╛ рд╕реАрдирд╛рд░рд┐рдУ рд╣рд╡рд╛ рдЖрд╣реЗ? рдореА рдЕрдЬреВрди рд╕реНрдкрд╖реНрдЯ рдХрд░реВ рд╢рдХрддреЛ рдХрд╛? ЁЯШК




------------------------------------------------------------------------------------------------------------------------
crtete 3 ns prod QA dev
block communication between them
ns - in that 2 pod - block access between 2 pods
do it same on  all 3 namespace
 we will give access on port level in real time   -------------vimp
-----------------------------------------------------------------
network policies apply on 
pod
lebel
ns

--------------------------------------------------
eksctl create cluster \
  --name kausarmujawar-shop \
  --region us-east-1 \
  --nodegroup-name sara \
  --node-type t2.medium \
  --nodes 1 \
  --ssh-access \
  --ssh-public-key ~/.ssh/id_ed25519.pub \
  --topology private \
  --networking calico \
  --external-dns-name kausarmujawar.shop

ku run trouble1 --image=kiran2361993/troubleshootingtools:v1 -n default
ku run trouble2 --image=kiran2361993/troubleshootingtools:v1 -n default

login 1st conatiner and try ti ping it for both p1 -p2
p2 -p1

but i want restrict acssess

kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: deny-ingress
  namespace: default
spec:
  podSelector: 
    matchLabels:
      run: trouble1
  policyTypes:
  - Ingress

apply it 

kubectl get nodes -o wide --no-headers
login pod 1 ping pod 2 - success - ingress
login pod 2 ping pod 1  - failed - egress

kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: deny-egress
  namespace: default
spec:
  podSelector: 
    matchLabels:
      run: trouble1
  policyTypes:
  - Egress
block from 2 side
delete pod all
-------------------------------------------------------------------------------------------------------------------------------------------------
#Creating Namespaces & Utilpods
kubectl create ns prod
kubectl create ns dev
kubectl create ns qa

#Labling Namespaces
kubectl label ns prod nsp=prod
kubectl label ns dev nsp=dev
kubectl label ns qa nsp=qa

#Deploy  pod in all namespaces
ku run -n prod prod1 --image=kiran2361993/troubleshootingtools:v1 -l ns=prod
ku run -n prod prod2 --image=kiran2361993/troubleshootingtools:v1 -l ns=prod

ku run -n dev dev1 --image=kiran2361993/troubleshootingtools:v1 -l ns=dev
ku run -n dev dev2 --image=kiran2361993/troubleshootingtools:v1 -l ns=dev

ku run -n qa qa1 --image=kiran2361993/troubleshootingtools:v1 --labels ns=qa
ku run -n qa qa2 --image=kiran2361993/troubleshootingtools:v1 --labels ns=qa



ku get po -n prod -o wide --no-headers && ku get po -n dev -o wide --no-headers && ku get po -n qa -o wide --no-headers

alias allpods='ku get po -n prod -o wide --no-headers && ku get po -n dev -o wide --no-headers && ku get po -n qa -o wide --no-headers'

ku delete pods -n default --all

change IP ALL

ku exec -it  prod1 -n prod -- ping -c 3  100.106.150.83 \
&& ku exec -it  prod2 -n prod -- ping -c 3  100.97.52.10 \
&& ku exec -it  prod1 -n prod -- ping -c 3   100.106.150.84     \
&& ku exec -it  prod2 -n prod -- ping -c 3   100.99.93.24


ku exec -it  dev1 -n dev -- ping -c 3    100.106.150.84 \
&& ku exec -it  dev2 -n dev -- ping -c 3  100.99.93.24 \
&& ku exec -it  dev1 -n dev -- ping -c 3   100.99.93.22    \
&& ku exec -it  dev2 -n dev -- ping -c 3 100.99.93.23 


ku exec -it  qa1 -n qa -- ping -c 3     100.99.93.22  \
&& ku exec -it  qa2 -n qa -- ping -c 3   100.99.93.23  \
&& ku exec -it  qa1 -n qa -- ping -c 3  100.106.150.83 \
&& ku exec -it  qa2 -n qa -- ping -c 3   100.97.52.10

after that it will ping each other but i dont want that

---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: deny-all-traffic-prod
  namespace: prod
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress


Pod1 can access Pod2 тЬЕ
Pod2 can access Pod1 тЬЕ
No other namespace can access these pods тЭМ

--------------------------------------------------------
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: deny-all-traffic-dev
  namespace: dev
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

тЬЕ dev namespace рдордзреАрд▓ рдХреЛрдгрддрд╛рд╣реА Pod рдмрд╛рд╣реЗрд░рдЪреНрдпрд╛ рдиреЗрдЯрд╡рд░реНрдХрд╢реА рдЬреЛрдбрд▓рд╛ рдЬрд╛рдК рд╢рдХрдд рдирд╛рд╣реА.
тЬЕ рдмрд╛рд╣реЗрд░рдЪреНрдпрд╛ рдХреЛрдгрддреНрдпрд╛рд╣реА Pod рдХрдбреВрди dev namespace рдордзреАрд▓ Pods рд▓рд╛ request рдкрд╛рдард╡рддрд╛ рдпреЗрдгрд╛рд░ рдирд╛рд╣реА.
тЭМ рдореНрд╣рдгрдЬреЗрдЪ рд╕рдВрдкреВрд░реНрдг dev namespace isolate рдХреЗрд▓рд╛ рдЬрд╛рдИрд▓.

---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: deny-all-traffic-qa
  namespace: qa
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress


тЬЕ qa namespace рдордзреАрд▓ Pods рдмрд╛рд╣реЗрд░рдЪреНрдпрд╛ рдХреЛрдгрддреНрдпрд╛рд╣реА рд╕рд░реНрд╡реНрд╣рд░рд╢реА рдХрд┐рдВрд╡рд╛ рдЗрддрд░ namespace рд╢реА рдХрдиреЗрдХреНрдЯ рд╣реЛрдК рд╢рдХрдгрд╛рд░ рдирд╛рд╣реАрдд.
тЬЕ рдЗрддрд░ namespace рдордзреАрд▓ Pods qa рдордзреАрд▓ Pods рдирд╛ request рдкрд╛рдард╡реВ рд╢рдХрдгрд╛рд░ рдирд╛рд╣реАрдд.
тЭМ рдореНрд╣рдгрдЬреЗрдЪ рд╕рдВрдкреВрд░реНрдг qa namespace isolate рд╣реЛрдИрд▓.

apply it
again apply above command


-----------------------------------------------------------------------------------------------------------------------------------
ata 3 namespace ahet tyamdhe acess nko ahe pn single ns mdil pod mde hvy

kubens prod
allpods

pod communication in single ns                 -------------vimp

#This Policy Will Allow Traffic Between PODs in prod NS with Label ns=prod
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-traffic-within-prod-namespace
  namespace: prod  # рд╣реЗ 'prod' namespace рдордзреНрдпреЗ рд▓рд╛рдЧреВ рд╣реЛрдИрд▓
spec:
  podSelector: {}  # 'prod' namespace рдордзреАрд▓ рд╕рд░реНрд╡ рдкреЙрдбреНрд╕рд╕рд╛рдареА
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: prod  # 'prod' namespace рдордзреАрд▓рдЪ рдЯреНрд░реЕрдлрд┐рдХрд▓рд╛ рдкрд░рд╡рд╛рдирдЧреА
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: prod  # рдлрдХреНрдд 'prod' namespace рдордзреНрдпреЗ рдЯреНрд░реЕрдлрд┐рдХ рдЬрд╛рдК рд╢рдХрддреЛ


apply it
login pod 1
acess pod 2
---------------------------------------------------------------------------
now allow acess between 2 ns

kubens dev
allpods

#Allow Ingress Traffic From dev To prod applied at prod Namespace
рд╣реА NetworkPolicy prod namespace рдордзреАрд▓ Pods рд▓рд╛ dev namespace рдордзреВрди inbound (Ingress) traffic allow рдХрд░рддреЗ.
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-traffic-from-dev-to-prod
  namespace: prod
spec:
  podSelector: 
   matchLabels:
    ns: prod
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          nsp: dev
    - podSelector:
        matchLabels:
          ns: dev
--------------------------------------------------------------------------------------------------------------------------------------------------
#Allow Egress Traffic From dev To prod applied at dev Namespace
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-traffic-from-dev-to-prod
  namespace: dev
spec:
  podSelector: 
   matchLabels:
    ns: dev
  policyTypes:
  - Egress
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          nsp: prod
    - podSelector:
        matchLabels:
          ns: prod


------------------------------------------------------------------------------------------------------------------------------------------------------

apply it
ku exec -it dev1 --bash
ping prod ip both - mhnje dev te prod access zal
prod to dev pn ping hoil l







--------------------------------------------------------------------------------------

---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-traffic-from-prod-to-qa-on-tcp8888
  namespace: qa
spec:
  podSelector: 
   matchLabels:
    ns: qa
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          nsp: prod
    - podSelector:
        matchLabels:
          ns: prod
    ports:
    - protocol: TCP
      port: 8888

---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-traffic-from-prod-to-qa-on-tcp8888
  namespace: prod
spec:
  podSelector: 
   matchLabels:
    ns: prod
  policyTypes:
  - Egress
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          nsp: qa
    - podSelector:
        matchLabels:
          ns: qa
    ports:
    - protocol: TCP
      port: 8888

curl http://100.106.150.84:8888

--------------------------------------------------------------------------
-allowing-coredns-ingress-prod.ym

---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-traffic-from-prod-to-coredns-on-tcp53
  namespace: prod
spec:
  podSelector: 
   matchLabels:
    ns: prod
  policyTypes:
  - Egress
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
    - podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 9153


#ku get pods -n kube-system









































----------------------------------------------------------
